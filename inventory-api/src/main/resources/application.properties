spring.application.name=inventory-service
spring.datasource.url=jdbc:h2:mem:inventorydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#url: jdbc:h2:file:./data/inventorydb;DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.sql.init.mode=always
spring.sql.init.data-locations=classpath:data.sql
spring.jpa.defer-datasource-initialization=true

spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# KAFKA Configurations
kafka.topic.orderPlaced = order-placed
kafka.topic.orderFailed = order-failed
kafka.topic.orderSuccess = order-success
# Kafka bootstrap server
spring.kafka.bootstrap-servers=localhost:9092

# Producer config
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer config
spring.kafka.consumer.group-id=order-notification-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Resilience47

resilience4j.ratelimiter.instances.createOrderRateLimiter.limit-for-period = 5
resilience4j.ratelimiter.instances.createOrderRateLimiter.limit-refresh-period = 1s
resilience4j.ratelimiter.instances.createOrderRateLimiter.timeout-duration. = 0
